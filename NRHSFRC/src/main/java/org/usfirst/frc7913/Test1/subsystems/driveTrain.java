// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc7913.Test1.subsystems;


import org.usfirst.frc7913.Test1.Robot;
import org.usfirst.frc7913.Test1.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.GenericHID;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.PWMVictorSPX;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.GenericHID.Hand;

/**
 *
 */
public class driveTrain extends Subsystem {
    private PWMVictorSPX leftLead;
    private PWMVictorSPX leftFollow;
    private PWMVictorSPX rightLead;
    private PWMVictorSPX rightFollow;
    private PWMVictorSPX lift;

    private RobotDrive driveTrain;

    public driveTrain() {
        leftLead = new PWMVictorSPX(0);
        addChild("leftLead",leftLead);
        leftLead.setInverted(false);
        leftFollow = new PWMVictorSPX(2);
        addChild("leftFollow",leftFollow);
        leftFollow.setInverted(false);
        
        rightLead = new PWMVictorSPX(1);
        addChild("rightLead",rightLead);
        rightLead.setInverted(false);
        rightFollow = new PWMVictorSPX(3);
        addChild("rightFollow",rightFollow);
        rightFollow.setInverted(false);

        lift = new PWMVictorSPX(4);
        
        driveTrain = new RobotDrive(leftLead, leftFollow, rightLead, rightFollow);
        
        driveTrain.setSafetyEnabled(true);
        driveTrain.setExpiration(0.1);
        driveTrain.setSensitivity(0.5);
        driveTrain.setMaxOutput(1.0);
    }

    @Override
    public void initDefaultCommand() {
        setDefaultCommand(new drive());
    }

    @Override
    public void periodic() {
        double d = (Robot.oi.joystickx30.getThrottle() + 2) / 2.25;
		driveTrain.arcadeDrive(Robot.oi.joystickx30.getY() * d, Robot.oi.joystickx30.getX() * d);
        lift.setSpeed(Robot.oi.xboxController.getY(GenericHID.Hand.kLeft) / 1);
    }
}